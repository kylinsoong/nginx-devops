upstream finebi {
   ip_hash;
   server 127.0.0.1:15001;
   server 127.0.0.1:15002;
}

upstream finerpt {
   ip_hash;
   server 127.0.0.1:16001;
   server 127.0.0.1:16002;
}

map $upstream_addr $ups_port {
  ~.+?:(?<port>\d+) $port;
  default unknown;
}

server {
    listen    8008;
    server_name _;

    location / {
        root   /app/html ;
        index  index.html index.htm;
    }

   location /help {
        return 200 '
        /ping                       -    "Ping"
        /admin.html                 -    "Basic HTTP Authentication"
        /one.html                   -    "Basic Rewrite"
        /{finebi,finerpt}           -    "Proxy Redirect"
        /http/info                  -    "Get client/server addr, cookie, xff, etc"
        /regexp                     -    "Print the Nginx Regular Expression Syntax" 
        \n';
    }

    location /ping {
        return 200 'ok\n';
    }
   

    location /admin.html {
        auth_basic           "Login Required";
        auth_basic_user_file "/etc/nginx/.httpwd";
    } 

    location /one.html {
        rewrite ^/(.*) /two.html redirect;
    }

   location /finebi {

      proxy_pass http://finebi/webroot/decision;

      proxy_set_header     Host $host;
      proxy_http_version   1.1;
      proxy_set_header     Connection "";

      add_header backend $upstream_addr;
      add_header backport $ups_port;

      proxy_redirect http://$host:$ups_port/webroot/decision /finebi;
   }

   location /finerpt {

      proxy_pass http://finerpt/webroot/decision;

      proxy_set_header     Host $host;
      proxy_http_version   1.1;
      proxy_set_header     Connection "";

      add_header backend $upstream_addr;
      add_header backport $ups_port;

      proxy_redirect http://$host:$ups_port/webroot/decision /finerpt;
   }

    location /http/info {
        return 200 '
            request: $request

        client addr: $remote_addr:$remote_port
        server addr: $server_addr:$server_port

             cookie: $http_cookie
                xff: $http_x_forward_for
         user agent: $http_user_agent

        \n';
    }

    location /regexp {
        proxy_pass   http://$host:$server_port/man.html ;
    }

    location /regexpNone {
        return 200 'begin with: /regexpNone\n';
    }

    location /regexpNone/web {
        return 200 'begin with: /regexpNone/web\n';
    }

    location ^~ /regexpRxp {
        return 200 'begin with: ^~ /regexpRxp\n';
    }

    location ^~ /regexpExp/web {
        return 200 'begin with: ^~ /regexpRxp/web\n';
    }

    location = /regexpEq {
        return 200 'begin with: = /regexpEq\n';
    }

    location ~* /regexpInsensitive {
        return 200 'begin with: ~* /regexpInsensitive\n';
    }

    location ~* /regexpLocationBlock {
        error_page 404 = @fallback;
    }

    location @fallback {
        return 200 '@fallback\n';
    }

    location ~* /myapp/.+\.php$ {
        return 200 '
        request:         $request

        potential uris:  /myapp/hello.php
                         /myapp/test/hello.php
                         /myAPP/test.pHP
                         /test/myapp/hello.php
                         /test/myapp/test/hello.php
        \n';
    }

    location ~* (.*/myapp)/(.+\.jsp)$ {
        return 200 '
        request:         $request
              1:         $1
              2:         $2

        potential uris:  /myapp/hello.jsp
                         /myapp/test/hello.jsp
                         /myAPP/test.JSP
                         /test/myapp/hello.jsp
                         /test/myapp/test/hello.jsp
        \n';
    }

    location ~* (?<begin>.*myapp)/(?<end>.+\.html)$ {
        return 200 '
        request:         $request
              1:         $1
              2:         $2

        potential uris:  /myapp/hello.html
                         /myapp/test/hello.html
                         /myAPP/test.HTML
                         /test/myapp/hello.html
                         /test/myapp/test/hello.html
        \n';
    }
    
}
